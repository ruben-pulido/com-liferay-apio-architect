configurations.all {
	resolutionStrategy {
		force 'xml-apis:xml-apis:1.4.01'
	}
}

allprojects {
	apply plugin: 'jacoco'

	clean {
		delete 'out'
	}

	check {
		dependsOn checkSourceFormatting
	}
}

configure(subprojects.findAll {!it.childProjects}) {
	test.ignoreFailures = false

	buildCSS.enabled = false

	processResources.enabled = false

	transpileJS.enabled = false

	configJSModules.enabled = false

	copyLibs.enabled = false

	replaceSoyTranslation.enabled = false

	wrapSoyAlloyTemplate.enabled = false

	setUpTestableTomcat.enabled = false

	startTestableTomcat.enabled = false

	stopTestableTomcat.enabled = false
}

task codeCoverageReport(type: JacocoReport)

codeCoverageReport {
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

	subprojects.findAll { !it.childProjects }.each { sourceSets it.sourceSets.main }

	afterEvaluate {
		classDirectories = files(classDirectories.files.collect { fileTree(dir: it, exclude: ['**/com/liferay/apio/architect/internal/test/**']) })
	}

	reports {
		csv.enabled = false
		html.enabled = false
		xml.destination "${buildDir}/reports/jacoco/report.xml"
		xml.enabled = true
	}
}